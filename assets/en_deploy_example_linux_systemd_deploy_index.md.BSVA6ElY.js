import{_ as t,c as r,j as a,a as n,G as i,w as l,aq as p,B as o,o as c}from"./chunks/framework.l2xuOoKE.js";const y=JSON.parse('{"title":"Deploying r-nacos with systemd","description":"","frontmatter":{},"headers":[],"relativePath":"en/deploy_example/linux_systemd_deploy/index.md","filePath":"en/deploy_example/linux_systemd_deploy/index.md","lastUpdated":1738043441000}'),h={name:"en/deploy_example/linux_systemd_deploy/index.md"};function d(u,s,b,m,k,g){const e=o("VPNolebaseInlineLinkPreview");return c(),r("div",null,[s[6]||(s[6]=a("h1",{id:"deploying-r-nacos-with-systemd",tabindex:"-1"},[n("Deploying r-nacos with systemd "),a("a",{class:"header-anchor",href:"#deploying-r-nacos-with-systemd","aria-label":'Permalink to "Deploying r-nacos with systemd"'},"​")],-1)),s[7]||(s[7]=a("h2",{id:"_1-introduction",tabindex:"-1"},[n("1. Introduction "),a("a",{class:"header-anchor",href:"#_1-introduction","aria-label":'Permalink to "1. Introduction"'},"​")],-1)),a("p",null,[i(e,{href:"https://github.com/r-nacos/r-nacos",target:"_blank",rel:"noreferrer"},{default:l(()=>s[0]||(s[0]=[n("r-nacos")])),_:1}),s[1]||(s[1]=n(" is a nacos service built using Rust. Compared to the Java-based nacos, it offers the same features but with faster startup times, lower system resource usage (initial memory under 10M), better performance, and greater stability."))]),s[8]||(s[8]=p(`<p>r-nacos is designed to be fully compatible with the latest nacos client SDK protocols (including 1.x http OpenApi and 2.x grpc protocol), allowing applications using nacos to seamlessly transition to r-nacos.</p><p>While r-nacos is straightforward to use in local testing—simply run <code>./rnacos</code> to start the application—production environments require a more standardized deployment approach.</p><p>Most Linux services now support systemd for unified service management. This article documents the process of deploying r-nacos using systemd.</p><h2 id="_2-planning-the-r-nacos-deployment" tabindex="-1">2. Planning the r-nacos Deployment <a class="header-anchor" href="#_2-planning-the-r-nacos-deployment" aria-label="Permalink to &quot;2. Planning the r-nacos Deployment&quot;">​</a></h2><ol><li>Place the service application in <code>/opt/rnacos/</code></li><li>Use <code>/etc/rnacos/env.conf</code> for r-nacos configuration</li><li>Store data in <code>/var/rnacos/io/</code></li><li>Place the systemd service configuration in <code>/lib/systemd/system/rnacos.service</code></li></ol><h2 id="_3-deployment-steps" tabindex="-1">3. Deployment Steps <a class="header-anchor" href="#_3-deployment-steps" aria-label="Permalink to &quot;3. Deployment Steps&quot;">​</a></h2><ol><li>Download the service application</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/rnacos/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/rnacos/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#download from github</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -LO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/r-nacos/r-nacos/releases/download/v0.5.0/rnacos-x86_64-unknown-linux-musl.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#download from gitee</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#curl -LO https://gitee.com/hqp/rnacos/releases/download/v0.5.0/rnacos-x86_64-unknown-linux-musl.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos-x86_64-unknown-linux-musl.tar.gz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>Add r-nacos service configuration</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/rnacos/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/rnacos/env.conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># rnacos offers two ways to specify configuration files:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># 1. Default file (placed in the running directory, named &quot;.env&quot;, automatically read)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># 2. Specified file (placed in any directory, specified via command line parameter &quot;-e file path&quot;, e.g., &quot;./rnacos -e /etc/rnacos/conf/default.cnf&quot;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># For more details, visit https://r-nacos.github.io/r-nacos/deplay_env.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># r-nacos http listening port, default: 8848</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_HTTP_PORT=8848</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#r-nacos grpc listening port, default: HTTP port +1000 (i.e., 9848) </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#RNACOS_GRPC_PORT=9848</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#r-nacos independent console port, default: HTTP port +2000 (i.e., 10848); set to 0 to disable independent console</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#RNACOS_HTTP_CONSOLE_PORT=10848</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#r-nacos console login failure limit per hour, default is 5; a user will be locked for 1 hour after 5 consecutive login failures, default: 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_CONSOLE_LOGIN_ONE_HOUR_LIMIT=5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#http worker threads, default: number of CPU cores </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#RNACOS_HTTP_WORKERS=8</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#local database sled folder for configuration center, automatically created during system runtime, default: nacos_db</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_CONFIG_DB_DIR=nacos_db</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#node id, default: 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ID=1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#node address Ip:GrpcPort, effective every time when running as a single node; when deploying in a multi-node cluster, only the value configured when joining the cluster is taken, default: 127.0.0.1:GrpcPort </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ADDR=127.0.0.1:9848</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#whether to initialize as the master node, (only effective during the first startup) default is true for node 1, false for other nodes </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#RNACOS_RAFT_AUTO_INIT=true</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#whether to join the corresponding master node, LeaderIp:GrpcPort; only effective during the first startup; default: empty </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#RNACOS_RAFT_JOIN_ADDR=127.0.0.1:9848</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#log level: debug, info, warn, error; all http, grpc requests will log info level, if not concerned, can set to error to reduce log volume, default: info</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RUST_LOG=info</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><ol start="3"><li>Initialize r-nacos data directory</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/rnacos/io/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If running with rnacos user, grant directory write permission to the user</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># adduser rnacos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># chown -R rnacos:rnacos /var/rnacos</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="4"><li>Initialize r-nacos service configuration</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/lib/systemd/system/rnacos.service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Description=r-nacos server</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">After=network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#Run with specified user</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#User=rnacos</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#Group=rnacos</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ExecStart=/opt/rnacos/rnacos -e /etc/rnacos/env.conf</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Automatically restart on abnormal process shutdown</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Restart=always</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WorkingDirectory=/var/rnacos/io</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ol start="5"><li>Reload and start the service</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Reload configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable and start the service immediately</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check service status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>By executing the above scripts together, the r-nacos service can be deployed.</p>`,17)),a("p",null,[s[3]||(s[3]=n("For the integrated script, refer to: ")),i(e,{href:"https://github.com/nacos-group/r-nacos/blob/v0.5.17/tools/linux-systemd-deploy.sh",target:"_blank",rel:"noreferrer"},{default:l(()=>s[2]||(s[2]=[n("linux-systemd-deploy.sh")])),_:1})]),s[9]||(s[9]=p(`<h2 id="_4-service-management" tabindex="-1">4. Service Management <a class="header-anchor" href="#_4-service-management" aria-label="Permalink to &quot;4. Service Management&quot;">​</a></h2><ol><li>Managing Services with <code>systemctl</code></li></ol><p>Here are some commonly used commands:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Check the status of a service</span></span>
<span class="line"><span>systemctl status rnacos</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Start a service</span></span>
<span class="line"><span>systemctl start rnacos</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Stop a service</span></span>
<span class="line"><span>systemctl stop rnacos</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Enable a service to start automatically on boot</span></span>
<span class="line"><span>systemctl enable rnacos</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Disable a service from starting automatically on boot</span></span>
<span class="line"><span>systemctl disable rnacos</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="2"><li>Additionally, you can use <code>journalctl</code> to manage and view service logs</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View the latest logs in real-time</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -f</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Other <code>journalctl</code> log management techniques can be explored separately and are not covered here.</p><h2 id="_5-service-verification" tabindex="-1">5. Service Verification <a class="header-anchor" href="#_5-service-verification" aria-label="Permalink to &quot;5. Service Verification&quot;">​</a></h2><h3 id="_5-1-local-http-verification-via-shell" tabindex="-1">5.1 Local HTTP Verification via Shell <a class="header-anchor" href="#_5-1-local-http-verification-via-shell" aria-label="Permalink to &quot;5.1 Local HTTP Verification via Shell&quot;">​</a></h3><ol><li>Example of Configuration Center HTTP API</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Set configuration</span></span>
<span class="line"><span>curl -X POST &#39;http://127.0.0.1:8848/nacos/v1/cs/configs&#39; -d &#39;dataId=t001&amp;group=foo&amp;content=contentTest&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Query configuration</span></span>
<span class="line"><span>curl &#39;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=t001&amp;group=foo&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>Example of Registration Center HTTP API</li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Register a service instance</span></span>
<span class="line"><span>curl -X POST &#39;http://127.0.0.1:8848/nacos/v1/ns/instance&#39; -d &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.11&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;001&quot;}&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl -X POST &#39;http://127.0.0.1:8848/nacos/v1/ns/instance&#39; -d &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.12&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;002&quot;}&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl -X POST &#39;http://127.0.0.1:8848/nacos/v1/ns/instance&#39; -d &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.13&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;003&quot;}&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Query service instances</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl &quot;http://127.0.0.1:8848/nacos/v1/ns/instance/list?&amp;namespaceId=public&amp;serviceName=foo%40%40nacos.test.001&amp;groupName=foo&amp;clusters=&amp;healthyOnly=true&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-2-nacos-client-application-verification" tabindex="-1">5.2 Nacos Client Application Verification <a class="header-anchor" href="#_5-2-nacos-client-application-verification" aria-label="Permalink to &quot;5.2 Nacos Client Application Verification&quot;">​</a></h3><p>If the client application and the Nacos service are running on different machines, you need to open ports <code>8848</code> and <code>9848</code> for internal network use. (Important: Do not expose these ports to the external network.)</p><p>Once the Nacos service is properly configured in the client application, you can proceed to verify its functionality.</p><h3 id="_5-3-using-the-r-nacos-console" tabindex="-1">5.3 Using the r-nacos Console <a class="header-anchor" href="#_5-3-using-the-r-nacos-console" aria-label="Permalink to &quot;5.3 Using the r-nacos Console&quot;">​</a></h3><p>After opening port <code>10848</code>, you can access the console by entering the corresponding IP address and port in your browser.</p><p>The new console features robust user management, login verification, and permission control, and it is designed to be safely exposed to the external network.</p><p>By default, the system creates a user named <code>admin</code> with the password <code>admin</code>.</p><h2 id="_6-summary" tabindex="-1">6. Summary <a class="header-anchor" href="#_6-summary" aria-label="Permalink to &quot;6. Summary&quot;">​</a></h2><p>r-nacos is a Nacos service implemented in Rust. We use it as a replacement for Java Nacos to reduce memory usage and enhance service stability.</p><p>systemd offers convenient service hosting capabilities, allowing you to easily convert a command-line application into a manageable background service.</p><p>Deploying r-nacos using systemd is a practical and production-ready solution.</p><hr><p>Date: 2024-03-26</p>`,26)),a("p",null,[s[5]||(s[5]=n("Author: ")),i(e,{href:"https://github.com/heqingpan",target:"_blank",rel:"noreferrer"},{default:l(()=>s[4]||(s[4]=[n("heqingpan")])),_:1})])])}const v=t(h,[["render",d]]);export{y as __pageData,v as default};
