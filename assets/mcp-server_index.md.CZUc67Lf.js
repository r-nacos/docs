import{_ as l,c as r,aq as i,j as t,a,G as e,w as p,B as o,o as h}from"./chunks/framework.l2xuOoKE.js";const c="/docs/assets/001_20250915082157.BxXTnLO3.png",k="/docs/assets/002_20250915010800.CvXN8wWk.png",d="/docs/assets/003_20250915012133.JLtr-zhd.png",u="/docs/assets/004_20250915012310.BGEmvrMI.png",m="/docs/assets/005_20250915083046.D8zpQuGZ.png",v=JSON.parse('{"title":"r-nacos支持mcp","description":"","frontmatter":{},"headers":[],"relativePath":"mcp-server/index.md","filePath":"zh/mcp-server/index.md","lastUpdated":1757897507000}'),E={name:"mcp-server/index.md"};function b(g,s,q,y,_,C){const n=o("VPNolebaseInlineLinkPreview");return h(),r("div",null,[s[6]||(s[6]=i('<h1 id="r-nacos支持mcp" tabindex="-1">r-nacos支持mcp <a class="header-anchor" href="#r-nacos支持mcp" aria-label="Permalink to &quot;r-nacos支持mcp&quot;">​</a></h1><p>r-nacos支持mcp，内置mcp server与接口转发；支持让注册到r-nacos的普通http接口通过r-nacos直接转化成mcp服务对外提供服务。</p><h2 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h2><p>如果你有一个或多个普通应用之前已经接入nacos/r-nacos注册中心，想提供mcp服务给ai code agent或自定义agent使用。使用r-nacos不用修改应用代码，只需要在控制台配置对应的mcp服务，即可对外提供mcp服务。</p><p>如果应用已经使用mcp sdk提供服务的应用，但它因状态问题只支持单实例使用。你想要支持集群部署，也可能考虑使用r-nacos。</p><p>如果之前没有注册到r-naocs，也可以考虑先把应用注册到r-nacos再使用r-nacos中间件服务。 r-naocs兼容nacos协议，支持多种不多语言的nacos sdk，接入很方便。</p><h2 id="功能说明" tabindex="-1">功能说明 <a class="header-anchor" href="#功能说明" aria-label="Permalink to &quot;功能说明&quot;">​</a></h2><ol><li>支持在控制台页面管理mcp工具与服务；mcp服务支持版本管理，发布的版本与编辑的版本可独立维护，历史版本可快速恢复。</li><li>mcp服务同时支持mcp sse协议与mcp streamable-http协议（推荐使用）；</li><li>内置mcp服务，支持mcp调用转发，支持多种http参数调用：原json参数调用、json转化为form参数调用，json转化为url参数调用；</li><li>mcp转发高性能：单机压测streamable-http，其qps 可达29350 ；（sse有状态，暂时没有合适的工具压测；理论上多一些集群内部转发信息处理，大概也能超过1.5万）</li><li>支持集群调用，即支持同一个session多次请求打到不同的r-nacos节点;r-nacos内部通过现有的集群通信能力支持把请求路由到对应的节点处理。</li></ol><h2 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">​</a></h2><p><img src="'+c+'" alt="mcp架构" loading="lazy"></p><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h2><h3 id="_1-部署运行r-nacos" tabindex="-1">1. 部署运行r-nacos <a class="header-anchor" href="#_1-部署运行r-nacos" aria-label="Permalink to &quot;1. 部署运行r-nacos&quot;">​</a></h3>',12)),t("p",null,[s[1]||(s[1]=a("使用支持mcp服务的 v0.7.x版本，具体的请参考 ")),e(n,{href:"https://r-nacos.github.io/docs/quick_started/",target:"_blank",rel:"noreferrer"},{default:p(()=>s[0]||(s[0]=[a("r-nacos部署说明文档")])),_:1})]),s[7]||(s[7]=i(`<h3 id="_2-创建mcp工具规格" tabindex="-1">2. 创建MCP工具规格 <a class="header-anchor" href="#_2-创建mcp工具规格" aria-label="Permalink to &quot;2. 创建MCP工具规格&quot;">​</a></h3><p>工具规格定义就是提供给大模型的工具描述。 这部分与具体的实现无关，即同一个工具规格，可以有不同的具体实现。 同时一个工具可以被多个MCP服务关联，这也是单独管理MCP工具规格的主要原因。</p><p>给大模型(openai)单个工具样例如下：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;function&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;parameters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;properties&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;number&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;the first number&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                &quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;number&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;the second number&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;required&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;b&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>其中除掉具体格式主要内容有3个字段<code>name</code>,<code>description</code>,<code>parameters</code> 。 外加上r-nacos管理需要的分组命名空间、分组信息，r-nacos中一个工具规格有5个字段。</p><p>详情页如下：</p><p><img src="`+k+'" alt="mcp架构" loading="lazy"></p><h3 id="_3-创建mcp服务" tabindex="-1">3. 创建MCP服务 <a class="header-anchor" href="#_3-创建mcp服务" aria-label="Permalink to &quot;3. 创建MCP服务&quot;">​</a></h3><p>一个mcp服务可有关联一组同命名空间的工具。 为了支持工具调用每个工具除了规格还需要配置对应的调用路由信息。</p><p>MCP服务信息如下：</p><p><img src="'+d+'" alt="mcp架构" loading="lazy"></p><p>编辑单个工具窗口：</p><p><img src="'+u+'" alt="mcp架构" loading="lazy"></p><h3 id="注册工具对应的服务到r-nacos" tabindex="-1">注册工具对应的服务到r-nacos <a class="header-anchor" href="#注册工具对应的服务到r-nacos" aria-label="Permalink to &quot;注册工具对应的服务到r-nacos&quot;">​</a></h3>',14)),t("p",null,[s[4]||(s[4]=a("上面的工具路由对应的服务可参考项目自带的测试工程 ")),e(n,{href:"https://github.com/nacos-group/r-nacos/tree/master/sdk-examples/python/calculate_api",target:"_blank",rel:"noreferrer"},{default:p(()=>s[2]||(s[2]=[a("python calculate-api")])),_:1}),s[5]||(s[5]=a(" 或 ")),e(n,{href:"https://github.com/nacos-group/r-nacos/tree/master/sdk-examples/rust/calculate-api",target:"_blank",rel:"noreferrer"},{default:p(()=>s[3]||(s[3]=[a("rust calculate-api")])),_:1})]),s[8]||(s[8]=i(`<p>注：调用工具前，需要把路由对应的应用启动并注册到r-nacos中</p><h3 id="服务使用" tabindex="-1">服务使用 <a class="header-anchor" href="#服务使用" aria-label="Permalink to &quot;服务使用&quot;">​</a></h3><p>创建好服务后，使用以下mcp地址即可对外提供服务。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Streamable HTTP:</span></span>
<span class="line"><span>http://{nacos_api_host}/rnacos/mcp/{server_unique_key}/{auth_key}</span></span>
<span class="line"><span>SSE:</span></span>
<span class="line"><span>http://{nacos_api_host}/rnacos/mcp/sse/{server_unique_key}/{auth_key}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>样例：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Streamable:  http://127.0.0.1:8848/rnacos/mcp/calculate/123456</span></span>
<span class="line"><span>SSE:  http://127.0.0.1:8848/rnacos/mcp/sse/calculate/123456</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="验证使用方式" tabindex="-1">验证使用方式 <a class="header-anchor" href="#验证使用方式" aria-label="Permalink to &quot;验证使用方式&quot;">​</a></h3><p>可用官方工具，在终端运行<code>npx @modelcontextprotocol/inspector</code>，然后在浏览器中查看、调用验证工具。</p><p><img src="`+m+'" alt="mcp架构" loading="lazy"></p><p>也可以在其它如claude code，roo code ,opencode或自定义等agent中配置mcp使用。</p>',10))])}const f=l(E,[["render",b]]);export{v as __pageData,f as default};
