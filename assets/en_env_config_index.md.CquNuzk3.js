import{_ as e,c as d,aq as a,o as n}from"./chunks/framework.l2xuOoKE.js";const u=JSON.parse('{"title":"Deployment Parameter Guide","description":"","frontmatter":{},"headers":[],"relativePath":"en/env_config/index.md","filePath":"en/env_config/index.md","lastUpdated":1738043441000}'),r={name:"en/env_config/index.md"};function i(s,t,o,l,c,p){return n(),d("div",null,t[0]||(t[0]=[a(`<h1 id="deployment-parameter-guide" tabindex="-1">Deployment Parameter Guide <a class="header-anchor" href="#deployment-parameter-guide" aria-label="Permalink to &quot;Deployment Parameter Guide&quot;">​</a></h1><p>To support various scenarios, the same application package must allow custom parameter settings.</p><p>r-nacos runtime parameters can be configured via environment variables or a specified configuration file. If not set, it will operate with default parameters.</p><h2 id="methods-to-configure-runtime-parameters" tabindex="-1">Methods to Configure Runtime Parameters <a class="header-anchor" href="#methods-to-configure-runtime-parameters" aria-label="Permalink to &quot;Methods to Configure Runtime Parameters&quot;">​</a></h2><h3 id="setting-parameters-via-environment-variables" tabindex="-1">Setting Parameters via Environment Variables <a class="header-anchor" href="#setting-parameters-via-environment-variables" aria-label="Permalink to &quot;Setting Parameters via Environment Variables&quot;">​</a></h3><p>Example:</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_HTTP_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8848</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ./rnacos</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This approach is handy for customizing a few parameters.</p><h3 id="setting-parameters-via-configuration-file" tabindex="-1">Setting Parameters via Configuration File <a class="header-anchor" href="#setting-parameters-via-configuration-file" aria-label="Permalink to &quot;Setting Parameters via Configuration File&quot;">​</a></h3><p>Example:</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Starting from version 0.3.0, the -e env_file runtime parameter is supported</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env_file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>If no file is specified, it will attempt to load configuration parameters from the .env file in the current directory.</p><p>The env_file content format is:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>KEY1=VALUE1</span></span>
<span class="line"><span>KEY2=VALUE2</span></span>
<span class="line"><span>KEY3=VALUE3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>r-nacos supports these environment variables at runtime; if not set, it will use default configurations.</p><h2 id="runtime-parameter-details" tabindex="-1">Runtime Parameter Details <a class="header-anchor" href="#runtime-parameter-details" aria-label="Permalink to &quot;Runtime Parameter Details&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter KEY</th><th>Description</th><th>Default Value</th><th>Example</th><th>Version Supported From</th></tr></thead><tbody><tr><td>RNACOS_HTTP_PORT</td><td>rnacos http listening port</td><td>8848</td><td>8848</td><td>0.1.x</td></tr><tr><td>RNACOS_GRPC_PORT</td><td>rnacos grpc listening port</td><td>Default is HTTP port + 1000</td><td>9848</td><td>0.1.x</td></tr><tr><td>RNACOS_HTTP_CONSOLE_PORT</td><td>r-nacos independent console port</td><td>Default is HTTP port + 2000; set to 0 to disable the independent console</td><td>10848</td><td>0.4.x</td></tr><tr><td>RNACOS_CONSOLE_LOGIN_ONE_HOUR_LIMIT</td><td>r-nacos console login failure limit within one hour</td><td>Default is 5; a user will be locked for one hour after 5 consecutive login failures</td><td>5</td><td>0.4.x</td></tr><tr><td>RNACOS_HTTP_WORKERS</td><td>Number of http worker threads</td><td>Number of CPU cores</td><td>8</td><td>0.1.x</td></tr><tr><td>RNACOS_CONFIG_DB_FILE</td><td>Local database file address for the configuration center [no longer used after 0.2.x]</td><td>config.db</td><td>config.db</td><td>0.1.x</td></tr><tr><td>RNACOS_CONFIG_DB_DIR</td><td>Local database directory for the configuration center, automatically created during system runtime [recommended to use RNACOS_DATA_DIR after v0.6.x due to semantic reasons]</td><td>nacos_db</td><td>nacos_db</td><td>0.2.x</td></tr><tr><td>RNACOS_DATA_DIR</td><td>Local database directory, automatically created during system runtime [equivalent to RNACOS_CONFIG_DB_DIR, used to replace RNACOS_CONFIG_DB_DIR]</td><td>Default is ~/.local/share/r-nacos/nacos_db for Linux, MacOS; nacos_db for Windows, Docker</td><td>nacos_db</td><td>0.6.x</td></tr><tr><td>RNACOS_RAFT_NODE_ID</td><td>Node ID</td><td>1</td><td>1</td><td>0.3.0</td></tr><tr><td>RNACOS_RAFT_NODE_ADDR</td><td>Node address Ip:GrpcPort, effective every time when running as a single node; for multi-node cluster deployment, only the value configured when joining the cluster is taken</td><td>127.0.0.1:GrpcPort</td><td>127.0.0.1:9848</td><td>0.3.0</td></tr><tr><td>RNACOS_RAFT_AUTO_INIT</td><td>Whether to initialize as the master node (only effective during the first startup)</td><td>Default is true for node 1, false for other nodes</td><td>true</td><td>0.3.0</td></tr><tr><td>RNACOS_RAFT_JOIN_ADDR</td><td>Whether to join the corresponding master node as a node, LeaderIp:GrpcPort; only effective during the first startup</td><td>Empty</td><td>127.0.0.1:9848</td><td>0.3.0</td></tr><tr><td>RNACOS_RAFT_SNAPSHOT_LOG_SIZE</td><td>Number of logs for raft to package a snapshot; a snapshot will be triggered when the change log exceeds this value</td><td>Default is 10000</td><td>10000</td><td>0.5.0</td></tr><tr><td>RUST_LOG</td><td>Log level: debug, info, warn, error; all http, grpc requests will log info, if not concerned, set to error to reduce log volume</td><td>info</td><td>error</td><td>0.3.0</td></tr><tr><td>RNACOS_ENABLE_NO_AUTH_CONSOLE</td><td>Whether to enable no-auth console</td><td>false</td><td>false</td><td>0.5.2</td></tr><tr><td>RNACOS_CONSOLE_LOGIN_TIMEOUT</td><td>Console login validity period (in seconds)</td><td>One day, 86400 seconds</td><td>86400</td><td>0.5.0</td></tr><tr><td>RNACOS_GMT_OFFSET_HOURS</td><td>Timezone for log time, in hours; default is local timezone, needs to be specified when running in Docker</td><td>local</td><td>8 (UTC+8), -5 (UTC-5)</td><td>0.5.7</td></tr><tr><td>RNACOS_ENABLE_OPEN_API_AUTH</td><td>Whether to enable authentication for openapi (Note: do not enable authentication when switching from nacos to r-nacos)</td><td>false</td><td>true</td><td>0.5.8</td></tr><tr><td>RNACOS_API_LOGIN_TIMEOUT</td><td>Open api authentication validity period, in seconds (Note: when switching from no authentication to enabling authentication, the corresponding duration needs to be waited to ensure client token updates take effect)</td><td>One hour, 3600 seconds</td><td>3600</td><td>0.5.8</td></tr><tr><td>RNACOS_CLUSTER_TOKEN</td><td>Communication request verification token between clusters, empty means no verification, only nodes with the same token can communicate</td><td>Empty string</td><td>1234567890abcdefg</td><td>0.5.8</td></tr><tr><td>RNACOS_BACKUP_TOKEN</td><td>Data backup interface request verification token, empty or less than 32 characters means no backup interface is enabled</td><td>Empty string</td><td>1234567890abcdefg1234567890abcdefg</td><td>0.6.6</td></tr><tr><td>RNACOS_INIT_ADMIN_USERNAME</td><td>Initial admin username, only effective during the first startup of the master node</td><td>admin</td><td>rnacos</td><td>0.5.11</td></tr><tr><td>RNACOS_INIT_ADMIN_PASSWORD</td><td>Initial admin password, only effective during the first startup of the master node</td><td>admin</td><td>rnacos123456</td><td>0.5.11</td></tr><tr><td>RNACOS_ENABLE_METRICS</td><td>Whether to enable monitoring metrics</td><td>true</td><td>true</td><td>0.5.13</td></tr><tr><td>RNACOS_METRICS_ENABLE_LOG</td><td>Whether to enable printing monitoring metrics logs</td><td>false</td><td>false</td><td>0.5.21</td></tr><tr><td>RNACOS_METRICS_COLLECT_INTERVAL_SECOND</td><td>Monitoring metrics collection interval, in seconds, minimum interval is 1 second, cannot be less than RNACOS_METRICS_LOG_INTERVAL_SECOND</td><td>15</td><td>5</td><td>0.5.14</td></tr><tr><td>RNACOS_METRICS_LOG_INTERVAL_SECOND</td><td>Monitoring metrics log printing interval, in seconds, minimum interval is 5 seconds</td><td>60</td><td>30</td><td>0.5.13</td></tr><tr><td>RNACOS_CONSOLE_ENABLE_CAPTCHA</td><td>Captcha switch</td><td>true</td><td>true</td><td>0.5.14</td></tr></tbody></table><p>Note: Starting from v0.3.0, nodes started with default parameters will be treated as a single-node cluster deployment where the current node is the master node. Supports joining additional slave nodes.</p>`,18)]))}const m=e(r,[["render",i]]);export{u as __pageData,m as default};
