import{_ as t,c as i,aq as a,o as n}from"./chunks/framework.CNcA2yo8.js";const h=JSON.parse('{"title":"Chapter 1: Overview","description":"","frontmatter":{},"headers":[],"relativePath":"en/intro/index.md","filePath":"en/intro/index.md","lastUpdated":1738043441000}'),r={name:"en/intro/index.md"};function o(s,e,l,c,u,d){return n(),i("div",null,e[0]||(e[0]=[a('<h1 id="chapter-1-overview" tabindex="-1">Chapter 1: Overview <a class="header-anchor" href="#chapter-1-overview" aria-label="Permalink to &quot;Chapter 1: Overview&quot;">​</a></h1><ul><li><p>r-nacos is a nacos service implemented in Rust. Compared to Java-based nacos, it offers the same features but with faster startup times, lower system resource usage (initial memory under 10M), higher performance, and greater stability.</p></li><li><p>r-nacos is designed to be fully compatible with the latest version of nacos&#39;s client SDK protocols (including 1.x http OpenApi and 2.x grpc protocol). This allows applications that rely on nacos services to migrate seamlessly to r-nacos without any code changes.</p></li></ul><p><img src="https://img.shields.io/github/downloads/r-nacos/r-nacos/total" alt="GitHub Downloads (all assets, all releases)" loading="lazy"><img src="https://img.shields.io/docker/pulls/qingpan/rnacos" alt="Docker Pulls" loading="lazy"></p><h1 id="chapter-2-application-scenarios-and-features" tabindex="-1">Chapter 2: Application Scenarios and Features <a class="header-anchor" href="#chapter-2-application-scenarios-and-features" aria-label="Permalink to &quot;Chapter 2: Application Scenarios and Features&quot;">​</a></h1><h2 id="_2-1-application-scenarios" tabindex="-1">2.1 Application Scenarios <a class="header-anchor" href="#_2-1-application-scenarios" aria-label="Permalink to &quot;2.1 Application Scenarios&quot;">​</a></h2><ul><li>① For development and testing environments using nacos, you can replace nacos with r-nacos, which starts up in seconds.</li><li>② For personal cloud service deployments using nacos, consider switching to r-nacos. It has low resource usage, with a package size just over 10M, no dependency on JDK, runtime CPU usage under 0.5%, and memory usage under 5M (depending on the instance).</li><li>③ For non-custom nacos services, if you want to enhance performance and stability, consider migrating to r-nacos.</li></ul><h2 id="_2-2-features" tabindex="-1">2.2 Features <a class="header-anchor" href="#_2-2-features" aria-label="Permalink to &quot;2.2 Features&quot;">​</a></h2><h3 id="_2-2-1-overview" tabindex="-1">2.2.1 Overview <a class="header-anchor" href="#_2-2-1-overview" aria-label="Permalink to &quot;2.2.1 Overview&quot;">​</a></h3><ul><li>r-nacos features are categorized into: <ul><li>① SDK-oriented features.</li><li>② Console-oriented features.</li><li>③ Deployment and clustering-oriented features.</li></ul></li></ul><h3 id="_2-2-2-sdk-oriented-features" tabindex="-1">2.2.2 SDK-Oriented Features <a class="header-anchor" href="#_2-2-2-sdk-oriented-features" aria-label="Permalink to &quot;2.2.2 SDK-Oriented Features&quot;">​</a></h3><ul><li><p>Access authentication:</p><ul><li>Provides an interface to obtain authentication tokens.</li><li>Actual requests currently do not support authentication; all are considered authenticated.</li></ul></li><li><p>Configuration center:</p><ul><li>Supports basic configuration center functions, including maintaining configuration history.</li><li>Compatible with the configuration center&#39;s SDK protocol.</li><li>Does not currently support gray release or tag isolation.</li></ul></li><li><p>Registration center:</p><ul><li>Supports basic registration center functions.</li><li>Compatible with the configuration center&#39;s SDK protocol.</li><li>Does not currently support real-time instance change notifications via 1.x udp, only supports real-time notifications via 2.x grpc.</li></ul></li></ul><div class="warning custom-block github-alert"><p class="custom-block-title">警告</p><p></p><p>For the registration center, the initial version supported udp instance change notifications, but it was later removed due to inconsistency with grpc support. It may be reintroduced in the future.</p></div><h3 id="_2-2-3-console-oriented-features" tabindex="-1">2.2.3 Console-Oriented Features <a class="header-anchor" href="#_2-2-3-console-oriented-features" aria-label="Permalink to &quot;2.2.3 Console-Oriented Features&quot;">​</a></h3><ul><li><p>Access authentication: Authentication is not currently enabled.</p></li><li><p>Namespaces:</p><ul><li>Supports managing namespace lists.</li><li>Supports switching namespaces to query configuration and service data.</li></ul></li><li><p>Configuration center:</p><ul><li>Supports configuration center information management.</li><li>Supports configuration import and export, with file formats compatible with nacos.</li><li>Supports viewing and restoring configuration history.</li><li>Does not currently support advanced tag queries.</li><li>Does not currently support querying configuration listening records.</li></ul></li><li><p>Service center:</p><ul><li>Supports service and service instance management in the registration center.</li><li>Does not currently support querying listening records.</li></ul></li></ul><h3 id="_2-2-4-deployment-and-clustering-oriented-features" tabindex="-1">2.2.4 Deployment and Clustering-Oriented Features <a class="header-anchor" href="#_2-2-4-deployment-and-clustering-oriented-features" aria-label="Permalink to &quot;2.2.4 Deployment and Clustering-Oriented Features&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/r-nacos/r-nacos/master/doc/assets/imgs/r-nacos_L2_0.3.7.svg" alt="Architecture Diagram" loading="lazy"></p><p>Explanation:</p><ul><li>r-nacos supports both standalone and cluster deployment by default; standalone mode is essentially a single-node cluster, and additional nodes can be added as needed.</li><li>Data persistence is handled by a raft protocol distributed database (raft protocol + node file storage), similar to etcd, <strong>with no dependency on MySQL</strong>.</li></ul>',18)]))}const g=t(r,[["render",o]]);export{h as __pageData,g as default};
