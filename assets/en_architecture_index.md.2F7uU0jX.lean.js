import{_ as a,c as l,aq as i,j as r,a as t,G as n,w as s,B as c,o as d}from"./chunks/framework.l2xuOoKE.js";const T=JSON.parse('{"title":"Architecture","description":"","frontmatter":{},"headers":[],"relativePath":"en/architecture/index.md","filePath":"en/architecture/index.md","lastUpdated":1738043441000}'),h={name:"en/architecture/index.md"};function u(p,e,g,f,m,y){const o=c("VPNolebaseInlineLinkPreview");return d(),l("div",null,[e[9]||(e[9]=i("",4)),r("ul",null,[e[3]||(e[3]=r("li",null,"r-nacos is designed to support cluster deployment by default. A single machine acts as a one-node cluster, and additional nodes can be added as needed.",-1)),e[4]||(e[4]=r("li",null,"Data persistence is handled by a distributed database using the raft protocol (raft protocol + node file storage), similar to etcd.",-1)),e[5]||(e[5]=r("li",null,[t("To back up and restore data, you only need to manage the files in the "),r("code",null,"RNACOS_CONFIG_DB_DIR:nacos_db"),t(" directory.")],-1)),r("li",null,[e[1]||(e[1]=t("The r-nacos console follows a front-end and back-end separation architecture. The front-end, which relies on nodejs, is hosted in a separate project ")),n(o,{href:"https://github.com/r-nacos/rnacos-console-web",target:"_blank",rel:"noreferrer"},{default:s(()=>e[0]||(e[0]=[t("r-nacos-console-web")])),_:1}),e[2]||(e[2]=t(". The front-end resources are then integrated into this project using cargo, eliminating the need for nodejs during Rust development."))])]),e[10]||(e[10]=i("",7)),r("p",null,[e[7]||(e[7]=t("For more details, refer to the ")),n(o,{href:"https://docs.qq.com/doc/DY0VxSkVGWHFYSlZJ",target:"_blank",rel:"noreferrer"},{default:s(()=>e[6]||(e[6]=[t("raft protocol paper")])),_:1}),e[8]||(e[8]=t("."))]),e[11]||(e[11]=i("",24))])}const w=a(h,[["render",u]]);export{T as __pageData,w as default};
