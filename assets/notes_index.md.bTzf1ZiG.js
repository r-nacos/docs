import{_ as l,c as a,o as i,a6 as e}from"./chunks/framework.C8_IbLF-.js";const N=JSON.parse('{"title":"第一章：概述","description":"","frontmatter":{},"headers":[],"relativePath":"notes/index.md","filePath":"notes/index.md","lastUpdated":1710174524000}'),o={name:"notes/index.md"},t=e('<h1 id="第一章-概述" tabindex="-1">第一章：概述 <a class="header-anchor" href="#第一章-概述" aria-label="Permalink to &quot;第一章：概述&quot;">​</a></h1><ul><li><p>R-Nacos 是一款采用 Rust 语言精心打造的 Nacos 服务实现，它以其轻巧、迅捷、稳健和卓越的性能表现而脱颖而出。这一服务不仅集成了注册中心、配置中心以及直观的 Web 管理控制台，还支持灵活的单机和集群部署模式，满足不同规模的应用需求。</p></li><li><p>R-Nacos 在设计上充分考虑了与最新版 Nacos 的兼容性，确保了对客户端 SDK 协议的全面支持，包括 1.x 版本的 HTTP OpenApi 和 2.x 版本的 gRPC 协议。这使得原本依赖于 Nacos 服务的应用程序能够无缝迁移至 R-Nacos，无需进行繁琐的代码修改。</p></li><li><p>相较于传统的 Java Nacos，R-Nacos 提供了更为出色的性能表现。它不仅启动速度更快，对系统资源的占用也更少，同时在运行稳定性和性能方面都有显著提升。这些优势使得 R-Nacos 成为构建现代、高效、可靠的微服务架构的理想选择。</p></li></ul><h1 id="第二章-应用场景和功能" tabindex="-1">第二章：应用场景和功能 <a class="header-anchor" href="#第二章-应用场景和功能" aria-label="Permalink to &quot;第二章：应用场景和功能&quot;">​</a></h1><h2 id="_2-1-应用场景" tabindex="-1">2.1 应用场景 <a class="header-anchor" href="#_2-1-应用场景" aria-label="Permalink to &quot;2.1 应用场景&quot;">​</a></h2><ul><li>① 开发测试环境使用 Nacos ，Nacos 服务可以换成 R-Nacos，启动更快，秒启动。</li><li>② 个人资源云服务部署的 Nacos ，可以考虑换成 R-Nacos 。资源占用率低，如：包10M 出头，不依赖 JDK；运行时 cpu 小于0.5% ，小于5M（具体和实例有关）。</li><li>③ 使用非订制 Nacos 服务 ，希望能提升服务性能与稳定性，可以考虑迁移到 R-Nacos 。</li></ul><h2 id="_2-2-功能" tabindex="-1">2.2 功能 <a class="header-anchor" href="#_2-2-功能" aria-label="Permalink to &quot;2.2 功能&quot;">​</a></h2><h3 id="_2-2-1-概述" tabindex="-1">2.2.1 概述 <a class="header-anchor" href="#_2-2-1-概述" aria-label="Permalink to &quot;2.2.1 概述&quot;">​</a></h3><ul><li>R-Nacos 的功能分为： <ul><li>① 面向 SDK 的功能。</li><li>② 面向控制台的功能。</li><li>③ 面向部署、集群的功能。</li></ul></li></ul><h3 id="_2-2-2-面向-sdk-的功能" tabindex="-1">2.2.2 面向 SDK 的功能 <a class="header-anchor" href="#_2-2-2-面向-sdk-的功能" aria-label="Permalink to &quot;2.2.2 面向 SDK 的功能&quot;">​</a></h3><ul><li><p>访问认证：</p><ul><li>有提供获取认证 token 的接口</li><li>实际请求暂不支持认证，都算认证通过。</li></ul></li><li><p>配置中心：</p><ul><li>支持配置中心的基础功能、支持维护配置历史记录。</li><li>兼容配置中心的 SDK 协议。</li><li>暂不支持灰度发布、暂不支持 tag 隔离。</li></ul></li><li><p>注册中心：</p><ul><li>支持注册中心的基础功能。</li><li>兼容配置中心的 SDK 协议。</li><li>暂不支持 1.x 的 udp 实例变更实时通知，只支持 2.x 版本 grpc 实例变更实时通知 。最开始的版本也有支持过 udp 实例变更 通知，后面因支持 grpc 的两者不统一，就暂时去掉，后继可以考虑加回去。</li></ul></li></ul><h3 id="_2-2-3-面向控制台的功能" tabindex="-1">2.2.3 面向控制台的功能 <a class="header-anchor" href="#_2-2-3-面向控制台的功能" aria-label="Permalink to &quot;2.2.3 面向控制台的功能&quot;">​</a></h3><ul><li><p>访问认证： 暂时不开启认证。</p></li><li><p>命名空间：</p><ul><li>支持管理命名空间列表。</li><li>支持切换命名空间查询配置、服务数据。</li></ul></li><li><p>配置中心：</p><ul><li>支持配置中心信息管理。</li><li>支持配置导入、导出,其文件格式与 Nacos 兼容。</li><li>支持配置历史记录查看与恢复。</li><li>暂不支持 tag 的高级查询。</li><li>暂不支持查询配置监听记录。</li></ul></li><li><p>服务中心：</p><ul><li>支持注册中心的服务、服务实例管理。</li><li>暂不支持查询监听记录</li></ul></li></ul><h3 id="_2-2-4-面向部署、集群的功能" tabindex="-1">2.2.4 面向部署、集群的功能 <a class="header-anchor" href="#_2-2-4-面向部署、集群的功能" aria-label="Permalink to &quot;2.2.4 面向部署、集群的功能&quot;">​</a></h3><ul><li>支持单击部署。</li><li>支持集群部署，其中集群部署配置中心数据使用 raft + 节点本地存储组成的分布式存储，不需要依赖 MySQL 。</li></ul>',14),r=[t];function s(c,n,u,d,h,p){return i(),a("div",null,r)}const x=l(o,[["render",s]]);export{N as __pageData,x as default};
