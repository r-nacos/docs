import{_ as a,o as n,c as i,a6 as e}from"./chunks/framework.-anpL5na.js";const k=JSON.parse('{"title":"集群部署","description":"","frontmatter":{},"headers":[],"relativePath":"cluster_deploy/index.md","filePath":"zh/cluster_deploy/index.md","lastUpdated":1733968575000}'),p={name:"cluster_deploy/index.md"};function t(l,s,h,r,o,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="集群部署" tabindex="-1">集群部署 <a class="header-anchor" href="#集群部署" aria-label="Permalink to &quot;集群部署&quot;">​</a></h1><p>r-nacos 在v0.3.0版本后支持集群部署。</p><h2 id="集群功能机制简介" tabindex="-1">集群功能机制简介 <a class="header-anchor" href="#集群功能机制简介" aria-label="Permalink to &quot;集群功能机制简介&quot;">​</a></h2><p>集群部署的目标是通过多实例部署的方式，支持服务的水平扩容，支持部分节点异常后继续提供服务，提升稳定性。</p><h3 id="配置中心" tabindex="-1">配置中心 <a class="header-anchor" href="#配置中心" aria-label="Permalink to &quot;配置中心&quot;">​</a></h3><p>配置中心使用raft集群协议+本地存储，持久化数据，不需要再依赖 mysql 存储配置。其持久化机制类似<code>etcd</code>。</p><table tabindex="0"><thead><tr><th>请求方式</th><th>说明</th><th>性能</th></tr></thead><tbody><tr><td>写入</td><td>只有主节点能写入，其它节点收到写入请求后转发到主节点写入</td><td>集群2千tps左右，有优化空间</td></tr><tr><td>读取</td><td>每个节点都能读取全量数据</td><td>单节点8万qps左右,集群总容量为n*8万</td></tr></tbody></table><h3 id="注册中心" tabindex="-1">注册中心 <a class="header-anchor" href="#注册中心" aria-label="Permalink to &quot;注册中心&quot;">​</a></h3><p>注册中心使用类distor协议，同步集群间的数据。</p><p>注册中心复用配置中心节点列表信息，两者协议是分别单独实现的。</p><table tabindex="0"><thead><tr><th>请求方式</th><th>说明</th><th>性能</th></tr></thead><tbody><tr><td>写入</td><td>注册中心每个节点平等，按hash划分每个节点负责的内容；节点对负责的服务可写，否则转发到对应负责的节点处理。</td><td>集群1万tps左右</td></tr><tr><td>读取</td><td>每个节点都能读取全量数据</td><td>单节点3万qps左右,集群总容量为n*3万</td></tr></tbody></table><h2 id="集群部署-1" tabindex="-1">集群部署 <a class="header-anchor" href="#集群部署-1" aria-label="Permalink to &quot;集群部署&quot;">​</a></h2><p>集群部署和单机部署步骤一致，只是对应的运行参数不同，增加了集群节点的配置。</p><h3 id="一、取得r-nacos安装包" tabindex="-1">一、取得r-nacos安装包 <a class="header-anchor" href="#一、取得r-nacos安装包" aria-label="Permalink to &quot;一、取得r-nacos安装包&quot;">​</a></h3><p>安装包的获取方式与 <a href="./../quick_started/">快速开始</a>一致</p><h3 id="二、配置集群规则" tabindex="-1">二、配置集群规则 <a class="header-anchor" href="#二、配置集群规则" aria-label="Permalink to &quot;二、配置集群规则&quot;">​</a></h3><p>集群部署相关的配置参数有四个:RNACOS_RAFT_NODE_ID,RNACOS_RAFT_NODE_ADDR,RNACOS_RAFT_AUTO_INIT,RNACOS_RAFT_JOIN_ADDR。</p><p>具体参数说明参考 <a href="./../env_config/">运行参数说明</a></p><p>集群配置规则：</p><ol><li>所有的集群节点都需要设置RNACOS_RAFT_NODE_ID,RNACOS_RAFT_NODE_ADDR ,其中不同节点的node_id和 node_addr不能相同；node_id为一个正整数，node_addr为<code>ip:grpc_port</code></li><li>集群主节点： 初始设置RNACOS_RAFT_AUTO_INIT为true （如果节点为1，默认是 true,不用额外设置）。</li><li>集群从节点： 初始设置RNACOS_RAFT_AUTO_INIT为false (节点非1,默认就是false,不用额外设置)；另外需要设置RNACOS_RAFT_JOIN_ADDR为当前主节点的地址，以方便启动时自动加入集群中。</li><li>第2、3点只是为了初始化组建集群。集群运行起来之后，后继启动配置从raft db中加载。</li><li>集群节点数量不要求，可以是1、2、3、4、... ； 不过raft协议只支持小于集群半数节点异常后继续提供写入服务(查询不影响)。例如：3个节点集群支持1个节点异常后提供写入服务，2个节点集群可以正常运行，不支持节点异常后提供服务。</li><li>从节点可以在使用过程中按需加入。比如原来3个节点，可能在使用一段时间后增加2个节点扩容。</li></ol><h4 id="实例-规划集群节点信息并编写对应的配置文件" tabindex="-1">实例：规划集群节点信息并编写对应的配置文件 <a class="header-anchor" href="#实例-规划集群节点信息并编写对应的配置文件" aria-label="Permalink to &quot;实例：规划集群节点信息并编写对应的配置文件&quot;">​</a></h4><p>按上面的配置规则，下面我们配置一个3节点集群例子。</p><p>初始化节信息</p><ol><li>主节点id为1，地址为127.0.0.1:9848</li><li>第一个从节点id为2，地址为127.0.0.1:9849</li><li>第二个从节点id为3，地址为127.0.0.1:9849</li></ol><p>正式集群部署的log等级建议设置为<code>warn</code>,不打正常的请求日志，只打报警或异常日志，减少日志量。</p><p><strong>配置信息如下</strong></p><p>env01</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#file:env01 , Initialize with the leader node role</span></span>
<span class="line"><span>RUST_LOG=warn</span></span>
<span class="line"><span>RNACOS_HTTP_PORT=8848</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ADDR=127.0.0.1:9848</span></span>
<span class="line"><span>RNACOS_CONFIG_DB_DIR=db01</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ID=1</span></span>
<span class="line"><span>RNACOS_RAFT_AUTO_INIT=true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>env02:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#file:env02 , Initialize with the follower node role</span></span>
<span class="line"><span>RUST_LOG=warn</span></span>
<span class="line"><span>RNACOS_HTTP_PORT=8849</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ADDR=127.0.0.1:9849</span></span>
<span class="line"><span>RNACOS_CONFIG_DB_DIR=db02</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ID=2</span></span>
<span class="line"><span>RNACOS_RAFT_JOIN_ADDR=127.0.0.1:9848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>env03:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#file:env03 , Initialize with the follower node role</span></span>
<span class="line"><span>RUST_LOG=warn</span></span>
<span class="line"><span>RNACOS_HTTP_PORT=8850</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ADDR=127.0.0.1:9850</span></span>
<span class="line"><span>RNACOS_CONFIG_DB_DIR=db03</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ID=3</span></span>
<span class="line"><span>RNACOS_RAFT_JOIN_ADDR=127.0.0.1:9848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>注：</strong> 上面的地址是本机运行多实例的地址，实际使用时换成具体的服务ip和port即可。</p><h3 id="三、启动集群" tabindex="-1">三、启动集群 <a class="header-anchor" href="#三、启动集群" aria-label="Permalink to &quot;三、启动集群&quot;">​</a></h3><h4 id="第一次启动" tabindex="-1">第一次启动 <a class="header-anchor" href="#第一次启动" aria-label="Permalink to &quot;第一次启动&quot;">​</a></h4><p>分别运行三个节点，需要先运行主节点成功后再运行</p><p>先运行主节点</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> n01.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>主节点功能启动后，再运行从节点</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env02</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> n02.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env03</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> n03.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>实例过程中不同的节点需要在不同的服务器运行服务。</p><h4 id="集群重启" tabindex="-1">集群重启 <a class="header-anchor" href="#集群重启" aria-label="Permalink to &quot;集群重启&quot;">​</a></h4><p>节点重启和第一次启动的配置和启动方式不变。</p><p>集群启动后，集群的节点信息已久化节点本地数据库中。 在节点重启时后直接从本地数据库加载集群节点的信息。这时就不需要读取需要加入的集群地址，RNACOS_RAFT_JOIN_ADDR不会再被使用(留在配置中也不影响)。</p><p>部分节点重启，在重启一个心跳时间(0.5秒)就会被重新加入集群。</p><p>全部节点重启， raft需要启动静默5秒+选举超时3秒后才重新选举主节点；10秒左右集群才提供配置写入服务。 期间配置查询，和注册中心的读写可以正常使用。</p><h3 id="四、运行应用使用集群" tabindex="-1">四、运行应用使用集群 <a class="header-anchor" href="#四、运行应用使用集群" aria-label="Permalink to &quot;四、运行应用使用集群&quot;">​</a></h3><p>集群服务启动后，即可运行原有的 nacos 应用。</p><h4 id="配置中心http-api例子" tabindex="-1">配置中心http api例子 <a class="header-anchor" href="#配置中心http-api例子" aria-label="Permalink to &quot;配置中心http api例子&quot;">​</a></h4><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\npublish config t001:contentTest to node 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8848/nacos/v1/cs/configs&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dataId=t001&amp;group=foo&amp;content=contentTest&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t001 from node 1, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=t001&amp;group=foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t001 from node 2, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8849/nacos/v1/cs/configs?dataId=t001&amp;group=foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t001 from node 3, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8850/nacos/v1/cs/configs?dataId=t001&amp;group=foo&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\npublish config t002:contentTest02 to node 2&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8849/nacos/v1/cs/configs&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dataId=t002&amp;group=foo&amp;content=contentTest02&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t002 from node 1, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=t002&amp;group=foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t002 from node 2, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8849/nacos/v1/cs/configs?dataId=t002&amp;group=foo&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nget config info t002 from node 3, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8850/nacos/v1/cs/configs?dataId=t002&amp;group=foo&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="注册中心http-api例子" tabindex="-1">注册中心http api例子 <a class="header-anchor" href="#注册中心http-api例子" aria-label="Permalink to &quot;注册中心http api例子&quot;">​</a></h4><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nregister instance nacos.test.001 to node 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8848/nacos/v1/ns/instance&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.11&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;001&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nregister instance nacos.test.001 to node 2&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8849/nacos/v1/ns/instance&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.12&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;002&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\nregister instance nacos.test.001 to node 3&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://127.0.0.1:8850/nacos/v1/ns/instance&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;port=8000&amp;healthy=true&amp;ip=192.168.1.13&amp;weight=1.0&amp;serviceName=nacos.test.001&amp;groupName=foo&amp;metadata={&quot;app&quot;:&quot;foo&quot;,&quot;id&quot;:&quot;003&quot;}&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n\\nquery service instance nacos.test.001 from node 1, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8848/nacos/v1/ns/instance/list?&amp;namespaceId=public&amp;serviceName=foo%40%40nacos.test.001&amp;groupName=foo&amp;clusters=&amp;healthyOnly=true&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n\\nquery service instance nacos.test.001 from node 2, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8849/nacos/v1/ns/instance/list?&amp;namespaceId=public&amp;serviceName=foo%40%40nacos.test.001&amp;groupName=foo&amp;clusters=&amp;healthyOnly=true&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n\\nquery service instance nacos.test.001 from node 3, value:&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8850/nacos/v1/ns/instance/list?&amp;namespaceId=public&amp;serviceName=foo%40%40nacos.test.001&amp;groupName=foo&amp;clusters=&amp;healthyOnly=true&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>如果在本地源码编译，可使用或参考<a href="https://github.com/heqingpan/rnacos/blob/master/test_cluster.sh" target="_blank" rel="noreferrer">test_cluster.sh</a> 创建、测试集群。</p><p>具体的用法参考 nacos.io 的用户指南。</p><p><a href="https://nacos.io/zh-cn/docs/sdk.html" target="_blank" rel="noreferrer">JAVA-SDK</a></p><p><a href="https://nacos.io/zh-cn/docs/other-language.html" target="_blank" rel="noreferrer">其它语言</a></p><p><a href="https://nacos.io/zh-cn/docs/open-api.html" target="_blank" rel="noreferrer">open-api</a></p><h2 id="集群管理工具" tabindex="-1">集群管理工具 <a class="header-anchor" href="#集群管理工具" aria-label="Permalink to &quot;集群管理工具&quot;">​</a></h2><h3 id="通过控制台查看集群状态" tabindex="-1">通过控制台查看集群状态 <a class="header-anchor" href="#通过控制台查看集群状态" aria-label="Permalink to &quot;通过控制台查看集群状态&quot;">​</a></h3><p><img src="https://github.com/heqingpan/rnacos/raw/master/doc/assets/imgs/20230915000345.png" alt="" loading="lazy"></p><p>在控制台页面主要观注集群节点列表状态与raft主角点是否正常</p><h3 id="通过接口查看集群状态" tabindex="-1">通过接口查看集群状态 <a class="header-anchor" href="#通过接口查看集群状态" aria-label="Permalink to &quot;通过接口查看集群状态&quot;">​</a></h3><ol><li>查询指定节点的raft 集群状态</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8848/nacos/v1/raft/metrics&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># {&quot;id&quot;:1,&quot;state&quot;:&quot;Leader&quot;,&quot;current_term&quot;:1,&quot;last_log_index&quot;:10,&quot;last_applied&quot;:10,&quot;current_leader&quot;:1,&quot;membership_config&quot;:{&quot;members&quot;:[1,2,3],&quot;members_after_consensus&quot;:null}}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主要关注 current_leader和members</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>增加节点</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8848/nacos/v1/raft/add-learner&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[2, &quot;127.0.0.1:9849&quot;]&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>推荐通过启动新节点时设置<code>RNACOS_RAFT_JOIN_ADDR</code>加入集群。 如果配置时主节点不确定，可以启动后再调用主节点接口把新节点加入集群。</p><p>此接口也可以用于在集群运行期更新集群节点地址。</p><ol start="3"><li>更新集群节点列表</li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8848/nacos/v1/raft/change-membership&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[1, 2, 3]&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果通过手动方式增加节点，需要调用本接口更新集群节点列表。</p><p>此接口可以用于对集群缩容，下线指定节点。</p><h2 id="附录介绍" tabindex="-1">附录介绍 <a class="header-anchor" href="#附录介绍" aria-label="Permalink to &quot;附录介绍&quot;">​</a></h2><p><a href="https://www.cnblogs.com/shizioo/p/17710328.html" target="_blank" rel="noreferrer">rnacos实现raft和类distro协议，支持集群部署</a></p>`,74)]))}const u=a(p,[["render",t]]);export{k as __pageData,u as default};
