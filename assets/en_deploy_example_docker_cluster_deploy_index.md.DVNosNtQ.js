import{_ as r,B as p,o as h,c as o,a3 as e,j as a,a as i,G as t,w as l}from"./chunks/framework.C4orK2dt.js";const d="/docs/assets/1.GJyBM4IG.png",c="/docs/assets/3.Dq04gYpw.gif",k="/docs/assets/4.DHMsGcxK.gif",u="/docs/assets/5.Cv_mxUfI.png",g="/docs/assets/6.CFIB3Lf0.png",A=JSON.parse('{"title":"Chapter 1: Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"en/deploy_example/docker_cluster_deploy/index.md","filePath":"en/deploy_example/docker_cluster_deploy/index.md","lastUpdated":1738043441000}'),E={name:"en/deploy_example/docker_cluster_deploy/index.md"},m={class:"note custom-block github-alert"};function b(y,s,F,f,v,C){const n=p("VPNolebaseInlineLinkPreview");return h(),o("div",{"data-pagefind-body":!0},[s[10]||(s[10]=e('<h1 id="chapter-1-introduction" tabindex="-1">Chapter 1: Introduction <a class="header-anchor" href="#chapter-1-introduction" aria-label="Permalink to &quot;Chapter 1: Introduction&quot;">​</a></h1><h2 id="_1-1-overview" tabindex="-1">1.1 Overview <a class="header-anchor" href="#_1-1-overview" aria-label="Permalink to &quot;1.1 Overview&quot;">​</a></h2><ul><li>Starting from version v0.3.0, r-nacos supports cluster deployment. The primary goal of cluster deployment is to enable horizontal scaling of services through multi-instance deployment, ensuring service continuity even if some nodes fail, thereby enhancing overall stability.</li></ul><h2 id="_1-2-configuration-center" tabindex="-1">1.2 Configuration Center <a class="header-anchor" href="#_1-2-configuration-center" aria-label="Permalink to &quot;1.2 Configuration Center&quot;">​</a></h2><ul><li>For the <code>Configuration Center</code>, r-nacos uses the raft cluster protocol combined with local storage to persist data, <strong>eliminating the need to rely on MySQL for configuration storage</strong>. Its persistence mechanism is similar to that of <code>etcd</code>:</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">Request Method</th><th style="text-align:left;">Description</th><th style="text-align:left;">Performance</th></tr></thead><tbody><tr><td style="text-align:left;">Write</td><td style="text-align:left;">Only the master node can perform write operations; other nodes forward write requests to the master node</td><td style="text-align:left;">The cluster achieves around 2000 tps, with potential for further optimization.</td></tr><tr><td style="text-align:left;">Read</td><td style="text-align:left;">Each node can read the complete dataset</td><td style="text-align:left;">A single node can handle around 80,000 qps, with the total cluster capacity being n*80,000.</td></tr></tbody></table><div class="important custom-block github-alert"><p class="custom-block-title">重要</p><p></p><p>TPS (Transactions Per Second) and QPS (Queries Per Second) are both metrics used to evaluate system performance, but they focus on different aspects.</p><ul><li><strong>TPS (Transactions Per Second)</strong>: <ul><li>TPS measures the number of transactions a server can complete per second.</li><li>A transaction typically represents a complete operation, such as a client sending a request to the server and receiving a response.</li><li>TPS emphasizes the overall performance of the system, including its processing power, response time, and ability to handle concurrent operations.</li><li>The TPS value reflects the system&#39;s overall throughput, indicating how much work it can handle in a given time frame.</li></ul></li><li><strong>QPS (Queries Per Second)</strong>: <ul><li>QPS measures the number of queries a server can respond to per second.</li><li>QPS is more concerned with the performance of databases or storage systems, particularly in handling read operations (queries).</li><li>A single page visit might only count as one TPS, but it could generate multiple server requests, all of which contribute to the QPS.</li><li>A high QPS value indicates that the system can quickly respond to query requests and has efficient read capabilities.</li></ul></li></ul><p>In summary, TPS focuses on the system&#39;s ability to handle complete transactions, while QPS focuses on the efficiency of handling individual query requests. In practice, improving TPS may involve techniques like concurrent programming, cache optimization, database tuning, and load balancing, whereas improving QPS often centers on optimizing database query performance.</p></div><h2 id="_1-3-registry-center" tabindex="-1">1.3 Registry Center <a class="header-anchor" href="#_1-3-registry-center" aria-label="Permalink to &quot;1.3 Registry Center&quot;">​</a></h2><ul><li>In the <code>Registry Center</code>, r-nacos uses a protocol similar to distor to synchronize data across clusters. The Registry Center shares the node list information with the Configuration Center, but the two protocols are implemented independently.</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">Request Method</th><th style="text-align:left;">Description</th><th style="text-align:left;">Performance</th></tr></thead><tbody><tr><td style="text-align:left;">Write</td><td style="text-align:left;">Each node in the Registry Center is equal, with responsibilities divided by hash. A node can write to the services it manages; otherwise, it forwards the request to the appropriate node.</td><td style="text-align:left;">Cluster performance is around 10,000 tps.</td></tr><tr><td style="text-align:left;">Read</td><td style="text-align:left;">Every node can access the complete data set.</td><td style="text-align:left;">Single node performance is around 30,000 qps. Total cluster capacity is n*30,000.</td></tr></tbody></table><h1 id="chapter-2-cluster-deployment" tabindex="-1">Chapter 2: Cluster Deployment <a class="header-anchor" href="#chapter-2-cluster-deployment" aria-label="Permalink to &quot;Chapter 2: Cluster Deployment&quot;">​</a></h1><h2 id="_2-1-overview" tabindex="-1">2.1 Overview <a class="header-anchor" href="#_2-1-overview" aria-label="Permalink to &quot;2.1 Overview&quot;">​</a></h2><ul><li>Cluster deployment is similar to single-node deployment, with the main difference being the runtime parameters and the addition of cluster node configurations.</li></ul><h2 id="_2-2-cluster-rules-explanation" tabindex="-1">2.2 Cluster Rules Explanation <a class="header-anchor" href="#_2-2-cluster-rules-explanation" aria-label="Permalink to &quot;2.2 Cluster Rules Explanation&quot;">​</a></h2><ul><li>There are four key configuration parameters for cluster deployment:</li></ul><table tabindex="0"><thead><tr><th>Cluster-related Configuration Parameters</th><th>Description</th><th>Default Value</th><th>Explanation</th></tr></thead><tbody><tr><td>RNACOS_RAFT_NODE_ID</td><td>Node ID</td><td>1</td><td>Not required for single-node operation.</td></tr><tr><td>RNACOS_RAFT_NODE_ADDR</td><td>Node address IP:GrpcPort</td><td>127.0.0.1:9848</td><td>Effective at every startup for single-node operation;<br>For multi-node clusters, only the value set at cluster join is used.</td></tr><tr><td>RNACOS_RAFT_AUTO_INIT</td><td>Whether to initialize as the master node (effective only at first startup)</td><td>true</td><td>Defaults to true for node 1.<br>Defaults to false for other nodes.</td></tr><tr><td>RNACOS_RAFT_JOIN_ADDR</td><td>Whether to join the corresponding master node (effective only at first startup)</td><td>Empty</td><td>127.0.0.1:9848</td></tr></tbody></table>',16)),a("div",m,[s[3]||(s[3]=a("p",{class:"custom-block-title"},"提醒",-1)),s[4]||(s[4]=a("p",null,null,-1)),a("p",null,[s[1]||(s[1]=i("Detailed parameter explanations are available ")),t(n,{href:"./../../env_config/"},{default:l(()=>s[0]||(s[0]=[i("here")])),_:1}),s[2]||(s[2]=i("."))])]),s[11]||(s[11]=e('<ul><li>Cluster configuration rules: <ul><li>① All <code>cluster nodes</code> must have <code>RNACOS_RAFT_NODE_ID</code> and <code>RNACOS_RAFT_NODE_ADDR</code> set. Each node must have a unique <code>node_id</code> and <code>node_addr</code>, where <code>node_id</code> is a <code>positive integer</code> and <code>node_addr</code> is <code>ip:grpc_port</code>.</li><li>② For the <code>master</code> node, set <code>RNACOS_RAFT_AUTO_INIT</code> to <code>true</code> initially (default for node 1, no additional setup needed).</li><li>③ For <code>slave</code> nodes, set <code>RNACOS_RAFT_AUTO_INIT</code> to <code>false</code> initially (default for nodes other than 1, no additional setup needed). Also, set <code>RNACOS_RAFT_JOIN_ADDR</code> to the address of the current <code>master</code> node to facilitate automatic cluster joining at startup.</li><li>④ Steps ② and ③ are only for initial cluster setup. Once the cluster is operational, subsequent configurations are loaded from the raft database.</li><li>⑤ The number of nodes in the cluster is flexible; it can be 1, 2, 3, 4, etc. However, the raft protocol only supports write operations if fewer than half of the nodes are down (queries are unaffected). For example, a 3-node cluster can tolerate one node failure, and a 2-node cluster operates normally but cannot handle node failures.</li><li>⑥ <code>Slave nodes</code> can be added as needed during operation. For instance, a cluster might start with 3 nodes and later expand by adding 2 more.</li></ul></li></ul><h2 id="_2-3-cluster-planning" tabindex="-1">2.3 Cluster Planning <a class="header-anchor" href="#_2-3-cluster-planning" aria-label="Permalink to &quot;2.3 Cluster Planning&quot;">​</a></h2><ul><li>To avoid port conflicts on the same host, the <code>bridge</code> network of Docker Compose is utilized, as shown below:</li></ul><p><img src="'+d+`" alt="image-20240312135638114" loading="lazy"></p><h2 id="_2-4-docker-compose-execution" tabindex="-1">2.4 Docker Compose Execution <a class="header-anchor" href="#_2-4-docker-compose-execution" aria-label="Permalink to &quot;2.4 Docker Compose Execution&quot;">​</a></h2><ul><li>Create the docker-compose.yaml file:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.8&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Specify the version number</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># All services to be launched</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  r-nacos-master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Master node</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">qingpan/rnacos:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-master</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Environment variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RUST_LOG=warn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_HTTP_PORT=8848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ADDR=r-nacos-master:9848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_CONFIG_DB_DIR=db</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ID=1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_AUTO_INIT=true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/nacos/io1:/io:rw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Host and container port mapping</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8848:8848&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Left host port: Right container port</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9848:9848&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Left host port: Right container port</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10848:10848&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Left host port: Right container port</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure the network the container connects to, referencing the top-level networks entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rnacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  r-nacos-slave1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Slave node</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">qingpan/rnacos:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-slave1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Environment variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RUST_LOG=warn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_HTTP_PORT=8848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ADDR=r-nacos-slave1:9848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_CONFIG_DB_DIR=db</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ID=2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_JOIN_ADDR=r-nacos-master:9848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/nacos/io2:/io:rw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rnacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-master</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  r-nacos-slave2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Slave node</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">qingpan/rnacos:stable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-slave2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Environment variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RUST_LOG=warn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_HTTP_PORT=8848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ADDR=r-nacos-slave2:9848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_CONFIG_DB_DIR=db</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_NODE_ID=3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">RNACOS_RAFT_JOIN_ADDR=r-nacos-master:9848</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/nacos/io3:/io:rw</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rnacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    depends_on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-master</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">r-nacos-slave1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><h1 id="define-networks-multiple-can-be-defined-if-not-declared-a-default-network-named-projectname-default-bridge-network-will-be-created" tabindex="-1">Define networks, multiple can be defined. If not declared, a default network named &quot;projectname_default&quot; bridge network will be created. <a class="header-anchor" href="#define-networks-multiple-can-be-defined-if-not-declared-a-default-network-named-projectname-default-bridge-network-will-be-created" aria-label="Permalink to &quot;Define networks, multiple can be defined. If not declared, a default network named &quot;projectname_default&quot; bridge network will be created.&quot;">​</a></h1><p>networks: rnacos: # The name of a specific network entry name: rnacos # Network name, default is &quot;projectname_networkentryname&quot; driver: bridge # Network mode, default is bridge</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>![](./assets/2.gif)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* Run Docker Compose:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`shell</span></span>
<span class="line"><span>docker compose up -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="`+c+'" alt="" loading="lazy"></p><ul><li>Check if it runs successfully:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+k+'" alt="" loading="lazy"></p><ul><li>Access via browser (address is <code>http://192.168.10.100:10848/</code>):</li></ul><p><img src="'+u+'" alt="image-20240312140306007" loading="lazy"></p><h2 id="_2-5-deploying-without-docker" tabindex="-1">2.5 Deploying Without Docker <a class="header-anchor" href="#_2-5-deploying-without-docker" aria-label="Permalink to &quot;2.5 Deploying Without Docker&quot;">​</a></h2><h3 id="_2-5-1-overview" tabindex="-1">2.5.1 Overview <a class="header-anchor" href="#_2-5-1-overview" aria-label="Permalink to &quot;2.5.1 Overview&quot;">​</a></h3>',19)),a("ul",null,[a("li",null,[s[6]||(s[6]=i("The deployment method is similar to ")),t(n,{href:"./../linux_deploy/"},{default:l(()=>s[5]||(s[5]=[i("Software Package Single Machine Deployment")])),_:1}),s[7]||(s[7]=i(", except that r-nacos supports starting via environment variables or configuration files. The corresponding documentation is ")),s[8]||(s[8]=a("a",{href:"./.html"},"here",-1)),s[9]||(s[9]=i("."))])]),s[12]||(s[12]=e('<h3 id="_2-5-2-cluster-planning" tabindex="-1">2.5.2 Cluster Planning <a class="header-anchor" href="#_2-5-2-cluster-planning" aria-label="Permalink to &quot;2.5.2 Cluster Planning&quot;">​</a></h3><ul><li>Use three Linux hosts as nodes for r-nacos, namely:</li></ul><p><img src="'+g+`" alt="image-20240312140920694" loading="lazy"></p><ul><li>Assume the configuration information of the three Linux hosts is as follows:</li></ul><table tabindex="0"><thead><tr><th>Linux Host</th><th>IP Address</th><th>Description</th></tr></thead><tbody><tr><td>r-nacos-master</td><td>192.168.10.100</td><td>Master Node</td></tr><tr><td>r-nacos-slave1</td><td>192.168.10.101</td><td>Slave Node</td></tr><tr><td>r-nacos-slave2</td><td>192.168.10.102</td><td>Slave Node</td></tr></tbody></table><div class="important custom-block github-alert"><p class="custom-block-title">重要</p><p></p><ul><li>① Ensure that the three Linux hosts can communicate with each other.</li><li>② In the test environment, you can choose to turn off the firewall!!!</li></ul></div><h3 id="_2-5-3-cluster-deployment" tabindex="-1">2.5.3 Cluster Deployment <a class="header-anchor" href="#_2-5-3-cluster-deployment" aria-label="Permalink to &quot;2.5.3 Cluster Deployment&quot;">​</a></h3><h4 id="_2-5-3-1-configuration-information-for-each-node" tabindex="-1">2.5.3.1 Configuration Information for Each Node <a class="header-anchor" href="#_2-5-3-1-configuration-information-for-each-node" aria-label="Permalink to &quot;2.5.3.1 Configuration Information for Each Node&quot;">​</a></h4><ul><li>The configuration information of <code>env01</code> for <code>r-nacos-master</code> is as follows:</li></ul><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#file:env01 , Initialize with the leader node role</span></span>
<span class="line"><span>RUST_LOG=warn</span></span>
<span class="line"><span>RNACOS_HTTP_PORT=8848</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ADDR=127.0.0.1:9848</span></span>
<span class="line"><span>RNACOS_CONFIG_DB_DIR=db01</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ID=1</span></span>
<span class="line"><span>RNACOS_RAFT_AUTO_INIT=true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>The configuration information of <code>env02</code> for <code>r-nacos-slave1</code> is as follows:</li></ul><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#file:env02 , Initialize with the follower node role</span></span>
<span class="line"><span>RUST_LOG=warn</span></span>
<span class="line"><span>RNACOS_HTTP_PORT=8849</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ADDR=127.0.0.1:9849</span></span>
<span class="line"><span>RNACOS_CONFIG_DB_DIR=db02</span></span>
<span class="line"><span>RNACOS_RAFT_NODE_ID=2</span></span>
<span class="line"><span>RNACOS_RAFT_JOIN_ADDR=127.0.0.1:9848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>The configuration information of <code>env03</code> for <code>r-nacos-slave2</code> is as follows:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#file:env03 , Initialize with the follower node role</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RUST_LOG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">warn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_HTTP_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8850</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_RAFT_NODE_ADDR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:9850</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_CONFIG_DB_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">db03</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_RAFT_NODE_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RNACOS_RAFT_JOIN_ADDR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:9848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_2-5-3-2-starting-the-cluster" tabindex="-1">2.5.3.2 Starting the Cluster <a class="header-anchor" href="#_2-5-3-2-starting-the-cluster" aria-label="Permalink to &quot;2.5.3.2 Starting the Cluster&quot;">​</a></h4><ul><li>Begin by starting each node in order, starting with the master node:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>Next, start the slave nodes and have them join the cluster:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env02</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./rnacos</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env03</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rnacos.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-6-cluster-restart" tabindex="-1">2.6 Cluster Restart <a class="header-anchor" href="#_2-6-cluster-restart" aria-label="Permalink to &quot;2.6 Cluster Restart&quot;">​</a></h2><h3 id="_2-6-1-overview" tabindex="-1">2.6.1 Overview <a class="header-anchor" href="#_2-6-1-overview" aria-label="Permalink to &quot;2.6.1 Overview&quot;">​</a></h3><ul><li>If the cluster is set up using Docker Compose, restarting is straightforward. You can use either of the following commands:</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This command will remove the containers and then restart them; if no mounts are used, data will be lost.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stop and restart all services without removing the containers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>If the cluster is built using software packages, the restart process is identical to the initial startup: omitted.</li></ul><h3 id="_2-6-2-notes" tabindex="-1">2.6.2 Notes <a class="header-anchor" href="#_2-6-2-notes" aria-label="Permalink to &quot;2.6.2 Notes&quot;">​</a></h3><ul><li>Once the cluster is up and running, the node information is stored in the local database of each node. When a node restarts, it retrieves the cluster node information directly from its local database. At this stage, there&#39;s no need to specify the cluster address to join, and <code>RNACOS_RAFT_JOIN_ADDR</code> becomes redundant (though leaving it in the configuration won&#39;t cause any issues).</li><li>If only some nodes restart, they will rejoin the cluster within one heartbeat interval (<code>0.5s</code>).</li><li>If all nodes restart, raft will initiate a silence period of <code>5s</code> followed by an election timeout of <code>3s</code> before re-electing the master node. The cluster will resume configuration write services after approximately <code>10s</code>. During this period, configuration queries and read/write operations on the registry will continue to function normally.</li></ul>`,28))])}const D=r(E,[["render",b]]);export{A as __pageData,D as default};
